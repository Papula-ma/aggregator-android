apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion '21.0.2'

    defaultConfig {
        applicationId 'com.tughi.aggregator.dev'
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 100
        versionName '3.0-dev'
    }
}

dependencies {
    compile project(':sqlite')
    compile project(':core')
    compile project(':xml')
    compile 'com.android.support:appcompat-v7:21.0.2'
    compile 'com.android.support:recyclerview-v7:21.0.0'
    compile 'com.squareup.picasso:picasso:2.4.0'
}

task generateDrawables << {
    def inkscapeCmd = '/Applications/Inkscape.app/Contents/Resources/bin/inkscape'

    def svgDir = new File(projectDir, ['src', 'main', 'svg'].join(File.separator))
    def resDir = new File(projectDir, ['src', 'main', 'res'].join(File.separator))

    def DENSITIES = [
            '-mdpi'   : 90,
            '-hdpi'   : 135,
            '-xhdpi'  : 180,
            '-xxhdpi' : 270,
            '-xxxhdpi': 360
    ]

    def generate = { String drawable ->
        new File(svgDir, drawable).eachFileMatch(~/.*\.svg/) { svg ->
            DENSITIES.each { type, dpi ->
                def png = new File(new File(resDir, drawable + type), svg.name.replace('.svg', '.png'))
                if (!png.exists() || png.lastModified() < svg.lastModified()) {
                    "$inkscapeCmd -e $png -d$dpi $svg"
                            .execute()
                            .waitFor()
                }
            }
        }
    }

    generate('drawable')
    generate('mipmap')
}

preBuild.dependsOn generateDrawables