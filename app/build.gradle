apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion '21.0.2'

    defaultConfig {
        applicationId 'com.tughi.aggregator2'
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 100
        versionName '3.0'
    }
}

dependencies {
    compile 'com.android.support:support-v4:21.0.0'
    compile project(':sqlite')
    compile project(':core')
}

task generateDrawables << {
    def svgDir = new File(projectDir, ['src', 'main', 'svg'].join(File.separator))
    def resDir = new File(projectDir, ['src', 'main', 'res'].join(File.separator))

    def DENSITY_RATIOS = ['mdpi': 1, 'hdpi': 1.5, 'xhdpi': 2, 'xxhdpi': 3, 'xxxhdpi': 4]

    def generateDrawable = { svg, drawable, width, height, densities=['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']->
        def svgFile = new File(svgDir, svg + '.svg')

        densities.each() { density ->
            def drawableFile = new File(resDir, 'drawable-' + density + File.separator + (drawable ?: svg) + '.png')

            if (!drawableFile.exists() || drawableFile.lastModified() < svgFile.lastModified()) {
                def w = (int) width * DENSITY_RATIOS[density]
                def h = (int) height * DENSITY_RATIOS[density]
                def command = "inkscape -e $drawableFile -w$w -h$h $svgFile"

                def process = command.execute()
                process.waitFor()
            }
        }
    }

    generateDrawable('ic_launcher', null, 48, 48, ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi'])

    generateDrawable('ic_launcher', 'ic_activity', 32, 32)
    generateDrawable('favicon_placeholder', null, 16, 16)

}
